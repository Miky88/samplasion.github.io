<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>SamplasionWeb</title><description>A simple blog where I talk about stuff.</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>SamplasionWeb</title><link>http://localhost:2368/</link></image><generator>Ghost 2.28</generator><lastBuildDate>Fri, 27 Sep 2019 12:35:44 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>The unc0ver jailbreak for starters</title><description>Yesterday, unc0ver got bumped to version 3.7.0, adding support to A12 devices on iOS 12.4. You're interested, so you want to try it on your iPhone XS Max, but you didn't know where to start. I've got you covered! In this post, we'll take a look at the basics of jailbreaking.</description><link>http://localhost:2368/the-unc0ver-jailbreak-for-starters/</link><guid isPermaLink="false">5d891ea59edae77516b5e0e7</guid><category>Tutorial</category><category>Jailbreak</category><category>Apple</category><dc:creator>Samplasion</dc:creator><pubDate>Tue, 24 Sep 2019 13:12:01 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/09/jailbreak-630x354.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/09/jailbreak-630x354.jpg" alt="The unc0ver jailbreak for starters"&gt;&lt;p&gt;Yesterday, unc0ver by &lt;a href="https://twitter.com/Pwn20wnd"&gt;@Pwn20wnd&lt;/a&gt; got bumped to version 3.7.0b1, adding support to A12 (= 2018 models) devices on iOS 12.4. You're interested, so you want to try it on your iPhone XS Max, but you don't know where to start. I've got you covered! In this post, we'll take a look at the basics of jailbreaking.&lt;/p&gt;&lt;h2 id="ok-cool-but-what-s-a-jailbreak"&gt;Ok, cool, but what's a jailbreak?&lt;/h2&gt;&lt;p&gt;A jailbreak is the act of evading from Apple's limits (a "jail"), thus allowing us to do stuff that couldn't simply be possible on a jailed (= non jailbroken) device.&lt;/p&gt;&lt;p&gt;Nowadays, the main jailbreaking utilities are two: &lt;strong&gt;unc0ver&lt;/strong&gt; by Pwn20wnd and &lt;strong&gt;Chimera&lt;/strong&gt; by coolstar. In this post we'll take a look at the former.&lt;/p&gt;&lt;p&gt;Jailbreaks can be divided in 4 categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Tethered&lt;/strong&gt;: The device cannot boot unless it's connected and turned on by a computer&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Semi-tethered&lt;/strong&gt;: The device boots normally, but to enter jailbroken mode, you must connect it to a computer and made it load the jailbreak from there.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Semi-untethered&lt;/strong&gt; (this one is relatively newer than the others): The device boots normally, but to enter jailbroken mode you must run it through an app installed on your device.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Untethered&lt;/strong&gt;: The device boots in jailbroken mode without the need of a computer&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Both the unc0ver jailbreak and the Chimera jailbreak are &lt;strong&gt;semi-untethered&lt;/strong&gt; types of jailbreak.&lt;/p&gt;&lt;h2 id="what-does-jailbreaking-allow-me-to-do"&gt;What does jailbreaking allow me to do?&lt;/h2&gt;&lt;p&gt;Jailbreaking allows you to do things such as installing themes, modifying system appearance and behavior and even installing apps not present on the App Store (like emulators).&lt;/p&gt;&lt;h2 id="what-s-unc0ver"&gt;What's unc0ver?&lt;/h2&gt;&lt;p&gt;unc0ver is Pwn20wnd's jailbreaking utility. It supports all devices on a version between 11.0 and 12.4 (two major versions – that's &lt;em&gt;a lot&lt;/em&gt;, really) with the exception of 12.3 - 12.3.2 not being supported*, it features Cydia by Saurik (the main "jailbreaking app store", it's been around since 2008) and Substrate as the tweak loader. It's so stable it's like a stock (= non modified) OS, it's blazingly fast and it rarely misses a shot (well, on some devices, we'll talk about that later).&lt;/p&gt;&lt;p&gt;*: as listed on &lt;a href="https://unc0ver.dev"&gt;unc0ver's official website&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="i-want-to-try-it-how"&gt;I want to try it; how?&lt;/h2&gt;&lt;p&gt;You essentially have two methods of sideloading (installing the app on your device) unc0ver on your device. No, you won't find it on the App Store. That's because Apple strictly forbids the usage of jailbreaks (although most Apple Store employees don't really care). You essentially have to use two methods:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Sideloading through Cydia Impactor&lt;/strong&gt;&lt;br&gt;Your best bet is to download the &lt;a href="https://unc0ver.dev"&gt;latest &lt;code&gt;.ipa&lt;/code&gt;&lt;/a&gt; from the unc0ver website and &lt;a href="https://cydia.saurik.com/api/latest/1"&gt;Cydia Impactor from here&lt;/a&gt;. Install iTunes from Apple's website (not from the Microsoft store) if you haven't done so already. Now, you'll want to open Cydia Impactor (do &lt;strong&gt;not&lt;/strong&gt; run as administrator if you're on Windows) and drag the &lt;code&gt;.ipa&lt;/code&gt; over the main window. It'll ask you for your Apple ID email. Enter that, and now it will ask you for your password (don't worry, it's secure).&lt;br&gt;Now, the password you're gonna enter will differ based on whether you've enabed 2 factor authorization on your Apple ID or not (if when you login it asks you for a code from other devices, it's enabled). If it's not enabled, just enter your usual password. If it's enabled, instead, follow the section below (&lt;strong&gt;"How do I obtain an App-specific password?"&lt;/strong&gt;). Then, back to Cydia Impactor, paste the password and watch it intall unc0ver on your device in a matter of seconds. This method is the most reliable, as it not only can be done whenever, but it also doesn't rely on someone else's servers being up. The only downside is that you'll need to repeat this process every 7 days, which you can automate with a method we'll discuss later on. If you see an error, refer to the next section for help.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sideloading through a signing service&lt;/strong&gt;&lt;br&gt;If you don't have access to a computer, or you're tired of running method #1 every week, you can use a signing service, like &lt;a href="https://jailbreak.fun"&gt;Jailbreaks.fun&lt;/a&gt; (they have the authorization to host every app, so it's 100% ok with &lt;em&gt;r/Jailbreak&lt;/em&gt;'s rules). To install unc0ver, you'll have to visit the website, then tap on unc0ver 3.7.0b1 (or whatever the latest version is) and, when the installation popup appears, press &lt;strong&gt;Install&lt;/strong&gt;. When it's done, you'll see unc0ver's icon next to your other apps, in the home screen.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If you try to open unc0ver right now, it'll say the app is not authorized. Take a note of who is the "developer", because we'll need it soon. The next step, common to both, is verifying that the "developer" (you in case you used Cydia Impactor or some Chinese company in case you used a signing service) is trustworthy. It may sound incredibly complicated, but it's just a matter of seconds. To authorize the developer, just go to the Settings, then General, tap on Profile and Device Management, and lastly, tap on the "developer" from before and tap on Authorize. If all goes well, you'll be able to open unc0ver and proceed to the next section. If you see something weird, refer to the next sections for help.&lt;/p&gt;&lt;h4 id="common-issues-with-cydia-impactor"&gt;Common issues with Cydia Impactor&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;"ios/submitDevelopmentCSR"&lt;/strong&gt;&lt;br&gt;This error means you have already used all of your two available certificates for a free developer account. To fix, click on Xcode, then Revoke certificates, re-login (like you did before, you can use the same App-specific password) and retry.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;"Please sign in with an app-specific password. You can create one at appleid.apple.com"&lt;/strong&gt;&lt;br&gt;This, obviously, means you've enabled 2 factor authorization, yet you tried to use your usual password. Generate an App-specific password (follow the section above) and retry.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you're having any other kind of issue, leave a comment below.&lt;/p&gt;&lt;h4 id="common-issues-with-signing-services"&gt;Common issues with signing services&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The application's icon looks dimmed and does nothing when I tap on it&lt;/strong&gt;&lt;br&gt;This means that unfortunately, the signing service's certificate has been revoked. You're gonna have to use Cydia Impactor for now.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;It says that the developer needs to be authorized, but I've already done so&lt;/strong&gt;&lt;br&gt;This also means that the signing service's certificate has been revoked, and you're also gonna have to use Cydia Impactor for now.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;When I tap on Install, there's no popup&lt;/strong&gt;&lt;br&gt;This may happen if you've just booted your phone; give it some time and the popup will show.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Again, if you're having any other kind of issue, leave a comment below.&lt;/p&gt;&lt;h2 id="ok-now-i-see-unc0ver-what-do-i-do"&gt;Ok, now I see unc0ver. What do I do?&lt;/h2&gt;&lt;p&gt;If you've gotten to this point, congratulations! You're one, simple step away from jailbreaking: open the app and thap on the big blue button to start the process! If anything goes well, you'll see a popup telling:&lt;/p&gt;&lt;blockquote&gt;Successfully renamed system snapshot&lt;/blockquote&gt;&lt;p&gt;It will reboot your device. To once and for all finalize the jailbreak process, reopen the app and tap the big blue button once again. It'll respring (it's like a reboot, but it's softer, meaning it won't remove the jailbreak unike a real reboot), and then you should find Cydia on your home screen. Open it and you'll have finished the jailbreaking process.&lt;/p&gt;&lt;p&gt;Whatever Cydia says, &lt;strong&gt;don't update any essential package unless they're confirmed to work by&lt;em&gt; r/Jailbreak&lt;/em&gt;!&lt;/strong&gt;&lt;/p&gt;&lt;h4 id="common-issues-with-unc0ver"&gt;Common issues with unc0ver&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;"Unable to create system snapshot. Delete OTA file from Settings - Storage if present"&lt;/strong&gt;&lt;br&gt;This means you have the 12.4.1 or 13.0 iOS update downloaded. To fix this, simply go to Settings, General, iPhone/iPad/iPod Free Space and delete the iOS 12.4.1/13.0 update from there. A full reboot should fix the issue and you'll be able to jailbreak.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Whatever I do, I can't jailbreak&lt;/strong&gt; (a.k.a. other errors)&lt;br&gt;This means you have the exploit set to &lt;em&gt;Sock Port 3.0&lt;/em&gt;. Switch to &lt;em&gt;Sock Puppet 3.0&lt;/em&gt; and retry.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you're having any other kind of issue and/or you couldn't fix these ones with the fix I've provided, leave a comment below.&lt;/p&gt;&lt;h2 id="what-about-stability-you-said-it-only-worked-well-on-some-devices"&gt;What about stability? You said it only worked well on some devices&lt;/h2&gt;&lt;p&gt;And it's true. On older devices, specifically A7 and A8 devices (iPhone 5s, iPhone 6, iPhone 6 Plus, iPod touch 6th generation, iPad Air, iPad mini 2, iPad mini 3 and iPad mini 4), it &lt;em&gt;does&lt;/em&gt; work, however the success rate of the exploits is a bit lower.&lt;/p&gt;&lt;h2 id="ok-but-i-m-tired-of-connecting-my-iphone-to-my-computer-to-resign-unc0ver-"&gt;Ok, but I'm tired of connecting my iPhone to my computer to resign unc0ver...&lt;/h2&gt;&lt;p&gt;There's a trick for you! Open Cydia, switch to the Sources tab, tap Edit, then Add and insert the following URL (don't forget the &lt;code&gt;https://&lt;/code&gt;): &lt;strong&gt;https://repo.incendo.ws&lt;/strong&gt;. Then refresh sources (it's done automatically), switch to the Search tab and search for &lt;strong&gt;ReProvision&lt;/strong&gt;. Once installed, it'll ask you for your Apple ID details (see &lt;strong&gt;"Sideloading through Cydia Impactor"&lt;/strong&gt; and &lt;strong&gt;"How do I obtain an App-specific password?"&lt;/strong&gt;). Once you've got the details, you'll see unc0ver's icon (it should be the only icon, but it won't be if you've sideloaded other apps). Tap on it and select Install. This'll enable auto-signing, which means that every 5 days or so the app will be resigned. Note that this only applies in jailbroken mode, ie. if you're unjailbroken (= out of the jailbroken mode) and you stay like that for a week, unc0ver won't be resigned.&lt;/p&gt;&lt;h2 id="how-do-i-obtain-an-app-specific-password"&gt;How do I obtain an App-specific password?&lt;/h2&gt;&lt;p&gt;You'll need to go to &lt;a href="https://appleid.apple.com/"&gt;the Apple ID homepage&lt;/a&gt; and login (enter the 6-digit auth code), then you'll need to select "Generate App-specific password". Give it a name, it can be random (mine is called "&lt;em&gt;cycycycy&lt;/em&gt;"), then press ok and copy the password (it's formatted like this: “&lt;em&gt;abcd-1234-efgh-5678&lt;/em&gt;“).&lt;/p&gt;&lt;h2 id="i-m-all-good-but-i-ve-seen-a-lot-of-wonderful-themes-how-do-i-install-them"&gt;I'm all good, but I've seen a lot of wonderful themes! How do I install them?&lt;/h2&gt;&lt;p&gt;You'll need to open Cydia once again, go to the Search tab and search for &lt;strong&gt;Snowboard&lt;/strong&gt; (and the theme of your choice, Felicity is a great one and it's also free). Once you install it and respring, go in the Settings, then scroll down to Snowboard and tap on &lt;em&gt;Select theme... &lt;/em&gt;then tap on the theme/theme extensions that you want to apply (for example, some themes might have an "Alt icons" extension) and go back. When you go back to the home screen, the theme will be applied.&lt;/p&gt;&lt;h2 id="final-considerations"&gt;Final considerations&lt;/h2&gt;&lt;p&gt;In this guide, we took a look at the very basics of jailbreaking, plus a couple nifty tricks that'll come in handy for sure.&lt;/p&gt;&lt;p&gt;If you liked this post, don't forget to share it with your friends and with anyone who might be interested. If you have any problem or just want to say hi, don't be scared to write a comment down below. See you in the next post!&lt;/p&gt;</content:encoded></item><item><title>How to build your own Chromium release for starters</title><description>In this post, we'll take a look at a comprehensive way to build a custom Chromium release.</description><link>http://localhost:2368/how-to-create-your-own-own-chromium-release-for-starters/</link><guid isPermaLink="false">5d65182405f78e09e2cbfd48</guid><category>Tutorial</category><category>Windows</category><category>Mac</category><category>Linux</category><dc:creator>Samplasion</dc:creator><pubDate>Wed, 28 Aug 2019 16:43:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/Schermata-2019-08-27-alle-13.56.52.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/Schermata-2019-08-27-alle-13.56.52.png" alt="How to build your own Chromium release for starters"&gt;&lt;p&gt;The other day I downloaded the Avast antivirus and I noticed it installed the Secure browser. When I opened it, it didn't take long until I noticed it's just a Chromium based browser with built-in extensions.&lt;/p&gt;&lt;p&gt;After that, I started thinking, "Is it hard to create a Chromium-based browser?". Today, I can certainly say &lt;strong&gt;the answer is no&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;But before actually starting with this tutorial, I should say that if you haven't got either a fast connection or much, much time, don't even bother starting this tutorial, because as stated in the official Chromium website, the download of the source code takes a long time on fast connections. I personally haven't got that fast of a connection, but I still managed to download it.&lt;/p&gt;&lt;p&gt;Don't get intimidated by the length of this tutorial; only selected sections of it will apply to you.&lt;/p&gt;&lt;p&gt;So, without further ado, let's start.&lt;/p&gt;&lt;h4 id="preparation"&gt;Preparation&lt;/h4&gt;&lt;!--kg-card-begin: html--&gt;&lt;p&gt;There are some things that you'll need to build your own Chromium release.&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;At least 100 GB of disk space on a drive formatted with a filesystem capable of handling files greater than 4 GB. Yes, the Chromium codebase is &lt;strong&gt;huge&lt;/strong&gt;.&lt;/li&gt;
    &lt;li&gt;
        The requirements stated by the Chromium docs. As of the 27th of August 2019, these are stated here.
        &lt;ul&gt;
            &lt;li&gt;
                For Windows, the requirements are:
                &lt;ul&gt;
                    &lt;li&gt;A 64-bit Intel machine with at least 8GB of RAM. More than 16GB is highly recommended.&lt;/li&gt;
                    &lt;li&gt;An appropriate version of Visual Studio (tl;dr: either 2017 latest or 2019 latest)&lt;/li&gt;
                    &lt;li&gt;Windows 7 or newer.&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;
                For macOS, the requirements are:
                &lt;ul&gt;
                    &lt;li&gt;A 64-bit Mac running 10.12+.&lt;/li&gt;
                    &lt;li&gt;Xcode 8+&lt;/li&gt;
                    &lt;li&gt;The OS X 10.12 SDK.&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;
                For Linux, the requirements depend on the target OS:
                &lt;ul&gt;
                    &lt;li&gt;
                        If the target OS is Linux:
                        &lt;ul&gt;
                            &lt;li&gt;A 64-bit Intel machine with at least 8GB of RAM. More than 16GB is highly recommended.
&lt;/li&gt;
                            &lt;li&gt;You must have Git and Python v2 installed already.&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
                        If the target OS is Chromium OS, the steps are done through emulation, so, additionally to a working linux setup, you'll need:
                        &lt;ul&gt;
                            &lt;li&gt;&lt;a href="https://www.chromium.org/developers/how-tos/install-depot-tools"&gt;depot_tools installed&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://g3doc.corp.google.com/tools/android/g3doc/development/crow/enable_kvm.md"&gt;Virtualization enabled&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromiumos/docs/+/master/simple_chrome_workflow.md"&gt;Simple Chrome&lt;/a&gt; set up&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
                Obviously, you can choose to build for Linux but not ChromeOS, or to build for both.
            &lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;&lt;!--kg-card-end: html--&gt;&lt;h4 id="windows-pre-setup"&gt;Windows Pre-Setup&lt;/h4&gt;&lt;p&gt;Before setting up the Chromium codebase, you'll need to install Visual Studio. Chromium requires Visual Studio 2017 (&amp;gt;=15.7.2) or 2019 (&amp;gt;=16.0.0) to build. Visual Studio can also be used to debug Chromium. To install the required libraries along with the code, run:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ PATH_TO_INSTALLER.EXE ^
--add Microsoft.VisualStudio.Workload.NativeDesktop ^
--add Microsoft.VisualStudio.Component.VC.ATLMFC ^
--includeRecommended&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;If you want to build for ARM64 Win32 then some extra arguments are needed. The full set for that case is:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ PATH_TO_INSTALLER.EXE ^
--add Microsoft.VisualStudio.Workload.NativeDesktop ^
--add Microsoft.VisualStudio.Component.VC.ATLMFC ^
--add Microsoft.VisualStudio.Component.VC.Tools.ARM64 ^
--add Microsoft.VisualStudio.Component.VC.MFC.ARM64 ^
--includeRecommended&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;You must have the version 10.0.18362 or higher Windows 10 SDK installed. This can be installed separately or by checking the appropriate box in the Visual Studio Installer.&lt;/p&gt;&lt;p&gt;The SDK Debugging Tools must also be installed. If the Windows 10 SDK was installed via the Visual Studio installer, then they can be installed by going to: &lt;strong&gt;Control Panel → Programs → Programs and Features →&lt;/strong&gt; Select the “&lt;strong&gt;Windows Software Development Kit&lt;/strong&gt;” &lt;strong&gt;→ Change → Change →&lt;/strong&gt; Check “&lt;strong&gt;Debugging Tools For Windows&lt;/strong&gt;” &lt;strong&gt;→ Change&lt;/strong&gt;. Or, you can download the standalone SDK installer and use it to install the Debugging Tools.&lt;/p&gt;&lt;h4 id="installing-depot_tools"&gt;Installing &lt;code&gt;depot_tools&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;The next step is to install the &lt;code&gt;depot_tools&lt;/code&gt;, which are crucial to the development routine in which they are the frontend to building the source code.&lt;/p&gt;&lt;p&gt;Now, the installation method is the same on macOS and Linux, but it differs on Windows.&lt;/p&gt;&lt;h5 id="linux-macos"&gt;Linux / macOS&lt;/h5&gt;&lt;p&gt;Clone the &lt;code&gt;depot_tools&lt;/code&gt; repository:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code&gt;$ git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;Add &lt;code&gt;depot_tools&lt;/code&gt; to the &lt;em&gt;&lt;strong&gt;start&lt;/strong&gt;&lt;/em&gt; of your PATH (you will probably want to put this in your &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt;). Assuming you cloned &lt;code&gt;depot_tools&lt;/code&gt; to &lt;code&gt;/path/to/depot_tools&lt;/code&gt;:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code&gt;$ export PATH=/path/to/depot_tools:$PATH&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;It's highly important that you put the &lt;code&gt;depot_tools&lt;/code&gt; before any Python installations. See the second note below for more information.&lt;/p&gt;&lt;h5 id="windows"&gt;Windows&lt;/h5&gt;&lt;p&gt;Download the &lt;code&gt;depot_tools&lt;/code&gt; bundle and extract it somewhere. &lt;strong&gt;&lt;em&gt;Make sure to extract the hidden &lt;/em&gt;&lt;/strong&gt;&lt;code&gt;.git&lt;/code&gt;&lt;strong&gt;&lt;em&gt; directory to allow for the tools to auto update themselves&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Add &lt;code&gt;depot_tools&lt;/code&gt; to the &lt;em&gt;&lt;em&gt;&lt;strong&gt;start&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt; of your PATH (must be ahead of any installs of Python). Again, it's highly important that you put the &lt;code&gt;depot_tools&lt;/code&gt; before any Python installations. See the second note below for more information. &lt;/p&gt;&lt;p&gt;Assuming you unzipped the bundle to &lt;code&gt;C:\workspace\depot_tools&lt;/code&gt;, edit the path to add the &lt;code&gt;depot_tools&lt;/code&gt;. To edit the path, go to &lt;strong&gt;&lt;strong&gt;Control Panel → System and Security → System → Advanced system settings&lt;/strong&gt; &lt;/strong&gt;if you have administrator access, or&lt;strong&gt; &lt;strong&gt;Control Panel → User Accounts → User Accounts → Change my environment variables&lt;/strong&gt; &lt;/strong&gt;if you haven't, then modify the PATH system variable to include &lt;code&gt;C:\workspace\depot_tools&lt;/code&gt; at the start.&lt;/p&gt;&lt;p&gt;From a Command Prompt shell, run the command &lt;code&gt;gclient&lt;/code&gt; (without arguments). On first run, it will install all the Windows-specific bits needed to work with the code, including &lt;code&gt;msysgit&lt;/code&gt; and &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;blockquote&gt;
    &lt;strong&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/strong&gt;
    &lt;ol&gt;
        &lt;li&gt;If you run &lt;code&gt;gclient&lt;/code&gt; from a shell that's not &lt;code&gt;cmd&lt;/code&gt;, it may appear to run properly, but &lt;code&gt;msysgit&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;, and other tools may not get installed correctly.&lt;/li&gt;
        &lt;li&gt;After running &lt;code&gt;gclient&lt;/code&gt;, open a command prompt and type &lt;code&gt;where python&lt;/code&gt;. Confirm that the &lt;code&gt;depot_tools&lt;/code&gt; &lt;code&gt;python.bat&lt;/code&gt; comes ahead of any copies of &lt;code&gt;python.exe&lt;/code&gt;. &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=611087"&gt;If it doesn't, &lt;code&gt;gn&lt;/code&gt; will build files it doesn't need to build&lt;/a&gt;.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/blockquote&gt;&lt;!--kg-card-end: html--&gt;&lt;h4 id="downloading-the-source-code"&gt;Downloading the Source Code&lt;/h4&gt;&lt;p&gt;If you are on Windows, execute the following steps before downloading:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ git config --global user.name "My Name"
$ git config --global user.email "my-name@chromium.org"
$ git config --global core.autocrlf false
$ git config --global core.filemode false
$ git config --global branch.autosetuprebase always&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;To download the source code, execute the following steps:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;# Create a directory to store the files
$ mkdir Chrome
$ cd Chrome

# Start the download
$ fetch chromium&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;If you don't want the full repo history, you can save a lot of time by adding the &lt;code&gt;--no-history&lt;/code&gt; flag to &lt;code&gt;fetch&lt;/code&gt;, and if at any time the installation stops before finishing, run  &lt;code&gt;gclient sync&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;Expect the command to take 30 minutes on even a fast connection, and many hours on slower ones.&lt;/blockquote&gt;&lt;p&gt;When &lt;code&gt;fetch&lt;/code&gt; is done, it'll have created a hidden &lt;code&gt;.git&lt;/code&gt; directory and a &lt;code&gt;src&lt;/code&gt; directory with the source code. Enter the &lt;code&gt;src&lt;/code&gt; directory:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ cd src&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;h4 id="platform-specific-and-general-instructions"&gt;Platform-Specific and General Instructions&lt;/h4&gt;&lt;p&gt;Now, the instructions for actually creating the build vary between cases, so here's a complete list.&lt;/p&gt;&lt;h5 id="basic-setup"&gt;Basic setup&lt;/h5&gt;&lt;!--kg-card-begin: html--&gt;&lt;blockquote&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;If you're on Linux, you must first follow &lt;a href="#linux-setup"&gt;this&lt;/a&gt;.&lt;/blockquote&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Create a build directory by using:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;gn gen out/Default&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;You can replace &lt;code&gt;Default&lt;/code&gt; with your own string, as long as it's a subdirectory of &lt;code&gt;out&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;This will generate all the needed files.&lt;/p&gt;&lt;h5 id="windows-setup-with-visual-studio"&gt;Windows setup with Visual Studio&lt;/h5&gt;&lt;p&gt;If you want to use the Visual Studio IDE, pass &lt;code&gt;--ide=vs&lt;/code&gt; to &lt;code&gt;gn gen&lt;/code&gt;.&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ gn gen --ide=vs out/Default
$ devenv out\Default\all.sln&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;GN will produce a file &lt;code&gt;all.sln&lt;/code&gt; in your build directory. It will internally use Ninja to compile while still allowing most IDE functions to work (there is no native Visual Studio compilation mode). If you manually run &lt;code&gt;gen&lt;/code&gt; again you will need to resupply this argument, but normally &lt;code&gt;gn&lt;/code&gt; will keep the build and IDE files up to date automatically when you build.&lt;/p&gt;&lt;p&gt;The generated solution will contain several thousand projects and will be very slow to load. Use the &lt;code&gt;--filters&lt;/code&gt; argument to restrict generating project files for only the code you're interested in. Although this will also limit what files appear in the project explorer, debugging will still work and you can set breakpoints in files that you open manually. A minimal solution that will let you compile and run Chrome in the IDE but will not show any source files is:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ gn gen --ide=vs --filters=//chrome --no-deps out\Default&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;You can selectively add other directories you care about to the filter like so: &lt;code&gt;--filters=//chrome;//third_party/WebKit/*;//gpu/*&lt;/code&gt;.&lt;/p&gt;&lt;h5 id="macos-setup-with-xcode"&gt;macOS setup with Xcode&lt;/h5&gt;&lt;p&gt;If you want to use Xcode, pass &lt;code&gt;--ide=xcode&lt;/code&gt; to &lt;code&gt;gn gen&lt;/code&gt;:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ gn gen out/Default --ide=xcode&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;Open it:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ open out/Default/ninja/all.xcworkspace&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;blockquote&gt;You may run into a problem where &lt;a href="http://yes/"&gt;http://YES&lt;/a&gt; is opened as a new tab every time you launch Chrome. To fix this, open the scheme editor for the Run scheme, choose the Options tab, and uncheck “Allow debugging when using document Versions Browser”. When this option is checked, Xcode adds &lt;code&gt;--NSDocumentRevisionsDebugMode YES&lt;/code&gt; to the launch arguments, and the &lt;code&gt;YES&lt;/code&gt; gets interpreted as a URL to open.&lt;/blockquote&gt;&lt;h5 id="linux-setup"&gt;Linux setup&lt;/h5&gt;&lt;h6 id="install-additional-build-dependencies"&gt;Install additional build dependencies&lt;/h6&gt;&lt;p&gt;Once you have downloaded the code, run build/install-build-deps.sh&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ ./build/install-build-deps.sh&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;You will need to adjust the build dependencies for other distros. There are some &lt;a href="https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#notes"&gt;notes&lt;/a&gt; in the official guide.&lt;/p&gt;&lt;h6 id="run-the-hooks"&gt;Run the hooks&lt;/h6&gt;&lt;p&gt;Once you've run &lt;code&gt;install-build-deps&lt;/code&gt; at least once, you can now run the Chromium-specific hooks, which will download additional binaries and other things you might need:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ gclient runhooks&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;!--kg-card-begin: html--&gt;&lt;p&gt;&lt;a href="#basic-setup"&gt;You can now follow this section.&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;h4 id="build-the-source-code"&gt;Build the source code&lt;/h4&gt;&lt;p&gt;Once you've edited the source code, you can run:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ autoninja -C out/Default chrome&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;!--kg-card-begin: html--&gt;&lt;p&gt;where &lt;code&gt;out/Default&lt;/code&gt; is the value you provided in &lt;a href="#platform-specific-and-general-instructions"&gt;Platform-Specific and General Instructions&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;h4 id="run-the-source-code"&gt;Run the source code&lt;/h4&gt;&lt;p&gt;To run the build, it's enough to open it from Explorer/Finder/File manager. Or, if you want to do it through the Terminal:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;# Windows
$ out\Default\chrome.exe

# macOS
$ out/Default/Chromium.app/Contents/MacOS/Chromium

# Linux
$ out/Default/chrome&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;!--kg-card-begin: html--&gt;&lt;p&gt;again, where &lt;code&gt;out/Default&lt;/code&gt; is the value you provided in &lt;a href="#platform-specific-and-general-instructions"&gt;Platform-Specific and General Instructions&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;h4 id="update-the-source-code"&gt;Update the source code&lt;/h4&gt;&lt;p&gt;If you want to update the source code to a newer version/commit of Chromium, run:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;# Update the code
$ git pull

# Sync dependencies to the appropriate versions and re-run hooks as needed.
$ gclient sync&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;h4 id="create-a-release-build"&gt;Create a Release build&lt;/h4&gt;&lt;p&gt;To create a release build, open &lt;code&gt;out/&amp;lt;dir name&amp;gt;&lt;/code&gt; and edit &lt;code&gt;args.gn&lt;/code&gt; to include:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-gn"&gt;is_debug = false&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;Building again creates a stand-alone executable that can be shared.&lt;/p&gt;&lt;h4 id="final-thoughts"&gt;Final thoughts&lt;/h4&gt;&lt;p&gt;I really hope you'll get around to creating an awesome Chromium release, and I hope you enjoyed this tutorial. If you've got any questions, ask them in the comments. See you soon!&lt;/p&gt;</content:encoded></item><item><title>A post about themes</title><description>Just me talking about the blog's theme.</description><link>http://localhost:2368/a-post-about-themes/</link><guid isPermaLink="false">5d62e53b8b044b2133f50ea4</guid><category>Meta</category><category>Blog</category><dc:creator>Samplasion</dc:creator><pubDate>Sun, 25 Aug 2019 21:46:32 GMT</pubDate><content:encoded>&lt;p&gt;I want to start off saying I really don't know what theme to use. I'd really just want to use either a Material Design theme or the old one, but I'm really out of ideas. And I'm out of luck, too, seeing as the only material theme is designed to work on Ghost 1.x. I guess my only choice will be to produce a theme myself...&lt;/p&gt;</content:encoded></item><item><title>Welcome, Ghost!</title><description>A brief description of the new blog backend.</description><link>http://localhost:2368/welcome-ghost/</link><guid isPermaLink="false">5d5bd5de06e75012f5f629ac</guid><category>Meta</category><category>Backend</category><category>Blog</category><dc:creator>Samplasion</dc:creator><pubDate>Tue, 20 Aug 2019 11:20:03 GMT</pubDate><content:encoded>&lt;p&gt;I've decided I wanted to change the blog's backend to something fresher and newer. That's why I've decided to switch to &lt;strong&gt;Ghost&lt;/strong&gt;, an open-source, Node-powered, headless blog backend. It's got a full-fledged admin interface, out-of-the-box theme integration (some are paid, but eh), integrations and &lt;strong&gt;a web-based post maker&lt;/strong&gt; (which is what I originally wanted to create for the old framework).&lt;br&gt;That's why I can say I'm particularly happy with this. One thing I should say is: if you want to do something like this on GH Pages, you'll have to follow an online guide with static site mirroring from the computer. But that's a minor annoyance.&lt;/p&gt;</content:encoded></item><item><title>Tech Showcase: Yamamura</title><description>Today I want to showcase a bot NightYoshi and I made.</description><link>http://localhost:2368/tech-showcase-yamamura/</link><guid isPermaLink="false">5d5bf65e06e75012f5f62ae4</guid><category>Tech Showcase</category><category>Bot</category><category>JavaScript</category><dc:creator>Samplasion</dc:creator><pubDate>Wed, 17 Jul 2019 13:42:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/Schermata-2019-08-20-alle-15.35.03.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/Schermata-2019-08-20-alle-15.35.03.png" alt="Tech Showcase: Yamamura"&gt;&lt;p&gt;Today I want to start a new series on this blog, "Tech Showcase", and what better way to start it than to showcase this!&lt;/p&gt;&lt;p&gt;&lt;a href="https://yamamura-bot.tk/" rel="nofollow"&gt;Yamamura&lt;/a&gt; is a Discord bot that NightYoshi370 and I have created for Hacking communities. Originally made for the &lt;a href="https://mariomods.net/" rel="nofollow"&gt;Mario Making Mods&lt;/a&gt; Discord Server under the name CourseBot, it evolved to a bot that anyone can use on their own server.&lt;/p&gt;&lt;p&gt;As said, it evolved from an old bot, namely CourseBot, made when I took a break from Discord. Its main purpose was to be the main bot and manager of the &lt;a href="https://mariomods.net/" rel="nofollow"&gt;Mario Making Mods&lt;/a&gt; Discord server, but it quickly evolved when NightYoshi rebranded it to Yamamura, and then found a better alternative to the framework it was using, &lt;code&gt;discord.js-commando&lt;/code&gt;.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-2629383633762978" data-ad-slot="2708522261"&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;I started helping NightYoshi when he discovered I could code bots. Since then, we started helping eachother, until we got to the point where I was a co-owner of CourseBot. We constantly shared pieces and snippets of code, until he sent me an invite to the Glitch project. Since then, NightYoshi and I have worked hard on making the bot the best it could be.&lt;/p&gt;&lt;!--kg-card-begin: image--&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="https://github.com/Samplasion/old_blog/raw/master/assets/images/yamamura-1.jpg" class="kg-image" alt="Tech Showcase: Yamamura"&gt;&lt;figcaption&gt;When NightYoshi found Akairo&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: image--&gt;&lt;p&gt;Then, one day, NightYoshi sent me a message, with a link to a framework similar to the one we were using, but better. I replied, «as long as the code works, I'm fine with it». Some time passed, and then NightYoshi told me he had started converting the framework. I offered to help him, and, slowly but surely, we started converting every command to the new framework.&lt;/p&gt;&lt;p&gt;It didn't go well at first. Umm, let's say Akairo outputs some cryptic error messages at times... (for example, &lt;code&gt;UnhandledPromiseRejectionWarning: Error: Command [object Object] already loaded.&lt;/code&gt;. It's the only part of the error, there's no stacktrace). I don't know how, honestly, but NightYoshi managed to overcome them all (I feel very useless now that I think about this seriously, make a statue of him and put it in every big city in the world).&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-2629383633762978" data-ad-slot="2708522261"&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Anyways, the second problem we had was for audio playing. It was overall pretty buggy, music would end before actually reaching the end or it wouldn't start at all. The issue was fixed by switching to the module &lt;code&gt;ytdl-core-discord&lt;/code&gt;, which was purposefully made for bots. I remember being pretty happy it finally worked.&lt;/p&gt;&lt;!--kg-card-begin: image--&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="https://github.com/Samplasion/old_blog/raw/master/assets/images/yamamura-2.jpg" class="kg-image" alt="Tech Showcase: Yamamura"&gt;&lt;figcaption&gt;The "similar commands" feature, still in beta state.&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: image--&gt;&lt;p&gt;Porting and development continued smoothly, and the bot is constantly evolving. As of the writing of this article, the latest feature is "similar commands" which means that if you make a mistake while typing out a command or type out an invalid command, it'll give you a list of actual commands based on what you tried to execute.&lt;/p&gt;&lt;p&gt;To wrap things up, I want to thank NightYoshi370 for his help during the years and for his help in writing this article. If you enjoyed this article, why not invite the bot and check what awesome other features Yamamura has to offer? You can do so by &lt;a href="https://yamamura-bot.tk/" rel="nofollow"&gt;visiting the Yamamura Website&lt;/a&gt;. I hope to see you soon!&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-2629383633762978" data-ad-slot="2708522261"&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;!--kg-card-end: html--&gt;</content:encoded></item><item><title>How to install NPM modules on Glitch</title><description>A quick tutorial on how to install NPM modules on Glitch</description><link>http://localhost:2368/how-to-install-npm-modules-on-glitch/</link><guid isPermaLink="false">5d5bf5b006e75012f5f62ac7</guid><category>Tutorial</category><category>Bot</category><category>JavaScript</category><dc:creator>Samplasion</dc:creator><pubDate>Mon, 15 Oct 2018 13:38:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/npm-1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/npm-1.jpg" alt="How to install NPM modules on Glitch"&gt;&lt;p&gt;Some days ago I was helping a friend hosting his project on &lt;a href="https://glitch.com/" rel="nofollow"&gt;Glitch&lt;/a&gt;. The question is, every time he wanted to add a module to his project, he would ask me to do so (not that it was a hassle for me). So, if you're here, it means you're asking the same question and, ladies and gentlemen, you found the right spot!&lt;/p&gt;&lt;p&gt;Alright, what you need to do is this:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;ul&gt;&lt;li&gt;Go in your project's &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Click the "Add Package" button up in the code&lt;/li&gt;&lt;li&gt;Now input the name of the module you want to install. The options are two:&lt;ul&gt;&lt;li&gt;Glitch can find the module. Click on its name and reboot the project.&lt;/li&gt;&lt;li&gt;Glitch can &lt;em&gt;not&lt;/em&gt; find the module. Unfortunately, Glitch doesn't update its package search very often. In this case, manually add an entry in the &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;???&lt;/li&gt;&lt;li&gt;Profit!&lt;/li&gt;&lt;/ul&gt;&lt;!--kg-card-end: html--&gt;&lt;!--kg-card-begin: image--&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/glitch_add_package.png" class="kg-image" alt="How to install NPM modules on Glitch"&gt;&lt;figcaption&gt;The "Add Package" button&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: image--&gt;&lt;p&gt;If for some reason you can't do something reported here, ask in the comments and I'll reply ASAP.&lt;/p&gt;</content:encoded></item><item><title>Let's make: Nintendo block to Megabyte/Gigabyte converter</title><description>In this post we'll make a block converter in Ruby.</description><link>http://localhost:2368/lets-make-nintendo-block-to-megabyte-gigabyte-converter/</link><guid isPermaLink="false">5d5bf30806e75012f5f62a8e</guid><category>Nintendo</category><category>Computer</category><dc:creator>Samplasion</dc:creator><pubDate>Sat, 18 Aug 2018 08:20:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/blockconverter-gui.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/blockconverter-gui.png" alt="Let's make: Nintendo block to Megabyte/Gigabyte converter"&gt;&lt;p&gt;To make a block converter, we need to know what the conversions are:&lt;/p&gt;&lt;blockquote&gt;1 MB = 8 blocks&lt;br&gt;1 GB = 8192 blocks&lt;/blockquote&gt;&lt;p&gt;Then, we can start defining functions:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-ruby"&gt;def bl_to_mb(bl) # block to mb
  return bl / 8
end

def bl_to_gb(bl) # block to gb
  return bl_to_mb(bl) / 1024 # nesting
end

def mb_to_bl(mb)
  return mb * 8
end

def gb_to_bl(gb)
  return gb * 8192
end

# we’ll include mb -&amp;gt; gb and viceversa for the sake of completion
def mb_to_gb(mb)
  return mb / 1024
end

def gb_to_mb(gb)
  return gb * 1024
end&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;We can wrap them up in a &lt;code&gt;module&lt;/code&gt;, like so:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-ruby"&gt;module Blockconverter
  # functions
end&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;And use it like so:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-ruby"&gt;puts Blockconverter::gb_to_bl(4).to_s + " blocks" # =&amp;gt; "32768 blocks"&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;We could wrap the returned integer in an interpolated string, like:&lt;/p&gt;&lt;!--kg-card-begin: code--&gt;&lt;pre&gt;&lt;code class="language-ruby"&gt;puts "#{Blockconverter::gb_to_bl(4)} blocks" # =&amp;gt; "32768 blocks"&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-end: code--&gt;&lt;p&gt;Of course there’s no advantage in taking either way, so feel free to choose the one that best suits you.&lt;/p&gt;&lt;p&gt;Let me know in the comments how you used this code and/or how you updated it!&lt;/p&gt;</content:encoded></item><item><title>Nintendo has been locking down their CDN: is this the end of freeShop and Wii U USB Helper?</title><description>Nintendo has locked down their CDN. This means that we will not be able to access their eShop servers anymore.</description><link>http://localhost:2368/nintendo-has-been-locking-down-their-cdn-is-this-the-end-of-freeshop-and-wii-u-usb-helper/</link><guid isPermaLink="false">5d5bf24706e75012f5f62a76</guid><category>Nintendo</category><category>FreeShop</category><category>Hacking</category><dc:creator>Samplasion</dc:creator><pubDate>Fri, 10 Aug 2018 13:50:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/3ds-freeshop-come-installare-giochi-direttamente-dal-3ds-1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/3ds-freeshop-come-installare-giochi-direttamente-dal-3ds-1.jpg" alt="Nintendo has been locking down their CDN: is this the end of freeShop and Wii U USB Helper?"&gt;&lt;p&gt;Nintendo has locked down their CDN. This means that we will not be able to access their eShop servers anymore.&lt;/p&gt;&lt;p&gt;With Nintendo blocking our way to their titles, returning a &lt;code&gt;403 Forbidden&lt;/code&gt; error, we have to return to the old method of downloading games from souces other than the eShop. This would also be the end of the ride for programs such as Wii U USB Helper and freeShop. Those, in fact, used to directly &lt;strong&gt;access&lt;/strong&gt; Nintendo's server to get a list of titles and download them. But with Nintendo putting under lock and key their games, those programs are rendered useless.&lt;/p&gt;&lt;!--kg-card-begin: gallery--&gt;&lt;figure class="kg-card kg-gallery-card kg-width-wide kg-card-hascaption"&gt;&lt;div class="kg-gallery-container"&gt;&lt;div class="kg-gallery-row"&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/3ds-freeshop-come-installare-giochi-direttamente-dal-3ds.jpg" width="480" height="360" alt="Nintendo has been locking down their CDN: is this the end of freeShop and Wii U USB Helper?"&gt;&lt;/div&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/wii-u-usb-helper-game-downloader-0.jpg" width="1682" height="1011" alt="Nintendo has been locking down their CDN: is this the end of freeShop and Wii U USB Helper?"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption&gt;We will remember the help those two programs have given.&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: gallery--&gt;&lt;p&gt;That said, let's hope Nintendo doesn't do anything too crazy to block hacking.&lt;/p&gt;&lt;p&gt;&lt;a href="https://gbatemp.net/threads/cdn-starts-being-locked-down-apparently.514351/" rel="nofollow"&gt;&lt;em&gt;Source&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>Game Translation: Around the World in 80 Days in Italian</title><description>I've made an Italian version of the game Around the World in 80 Days. It contains the original files from the Italian Big Fish demo.</description><link>http://localhost:2368/game-translation-around-the-world-in-80-days-in-italian/</link><guid isPermaLink="false">5d5bec8a06e75012f5f62a52</guid><category>Game Translation</category><category>Games</category><category>Italian Language</category><category>PC</category><category>Windows</category><category>Apple</category><category>Mac</category><category>Tutorial</category><dc:creator>Samplasion</dc:creator><pubDate>Mon, 09 Jul 2018 07:18:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/around-1-1.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/around-1-1.png" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;p&gt;I've made an Italian version of the game &lt;em&gt;Around the World in 80 Days&lt;/em&gt;. It contains the original files from the Italian Big Fish demo.&lt;/p&gt;&lt;h2 id="screenshots"&gt;Screenshots&lt;/h2&gt;&lt;!--kg-card-begin: gallery--&gt;&lt;figure class="kg-card kg-gallery-card kg-width-wide kg-card-hascaption"&gt;&lt;div class="kg-gallery-container"&gt;&lt;div class="kg-gallery-row"&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-1.png" width="801" height="601" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-2.png" width="802" height="602" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-3.png" width="802" height="602" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-gallery-row"&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-4.png" width="802" height="602" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-5.png" width="802" height="602" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;div class="kg-gallery-image"&gt;&lt;img src="http://localhost:2368/content/images/2019/08/around-6.png" width="802" height="602" alt="Game Translation: Around the World in 80 Days in Italian"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption&gt;Around the World in 80 Days in Italian is beautiful. Or is it just me?&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-end: gallery--&gt;&lt;h2 id="downloads"&gt;Downloads&lt;/h2&gt;&lt;h3 id="windows"&gt;Windows&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://mega.nz/#!Nwgzzajb!mmdxrQoNsKg4rklZdpOR7ss2mrZ4ZPvbGmjUeZ5Dubw"&gt;Zip File&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://mega.nz/#!tgxSXCRK!5ye4JjutRvRyS5C2Un8l7fQIsRLTG_aIJTucKJ6ItTs"&gt;Installer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="macos"&gt;macOS&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://mega.nz/#!0sZg0SjJ!tXuuq92nVh6ik_NgtOtG8yOiDDPW1lOIsIBa-ZN7Mjo"&gt;.app Folder (for Big Fish Games)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://mega.nz/#!0wIQwCxD!rD_C5O88N5gn2dCpVFiqE7w3mMTHXZKvy0liEpI4zhc"&gt;Resources Folder (for Playrix)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="installation-tutorials"&gt;Installation Tutorials&lt;/h2&gt;&lt;h3 id="windows-1"&gt;Windows&lt;/h3&gt;&lt;h4 id="zip-file"&gt;Zip File&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;Extract the contents of the Around the World in 80 Days ITA.zip file.&lt;/li&gt;&lt;li&gt;Go where you extracted it, create a shortcut to the game.exe file and put it on the desktop.&lt;/li&gt;&lt;/ol&gt;&lt;h4 id="installer"&gt;Installer&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;Run the Around the World in 80 Days.exe installer.&lt;/li&gt;&lt;li&gt;After finishing to install, go where you installed the game, create a shortcut to the game.exe file and put it on the desktop.&lt;/li&gt;&lt;/ol&gt;&lt;h3 id="mac"&gt;Mac&lt;/h3&gt;&lt;h4 id="-app-folder-for-big-fish-games-"&gt;&lt;code&gt;.app&lt;/code&gt; Folder (for Big Fish Games)&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;Locate the game Around the World in 80 Days in &lt;code&gt;/Applications&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Right click the game's icon and choose Show Package Contents.&lt;/li&gt;&lt;li&gt;Copy the file/folder Around the World in 80 Days.app into &lt;code&gt;Contents/Resources&lt;/code&gt; and replace the original.&lt;/li&gt;&lt;/ol&gt;&lt;h4 id="resources-folder-for-playrix-"&gt;Resources Folder (for Playrix)&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;Locate the game Around the World in 80 Days in &lt;code&gt;/Applications&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Right click the game's icon and choose Show Package Contents.&lt;/li&gt;&lt;li&gt;Copy the Resources folder into &lt;code&gt;Contents&lt;/code&gt; and replace the original.&lt;/li&gt;&lt;/ol&gt;</content:encoded></item><item><title>Enable Dark Mode on your Mac with this tool</title><description>In this post, we'll see how to darken macOS apps in a neat way!</description><link>http://localhost:2368/enable-dark-mode-on-your-mac-with-this-tool/</link><guid isPermaLink="false">5d5be8cf06e75012f5f62a24</guid><category>Apple</category><category>Tools</category><category>Mac</category><category>Tutorial</category><dc:creator>Samplasion</dc:creator><pubDate>Thu, 09 Nov 2017 18:18:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;Update 20/08/2019: I forgot to mention that this method only works on systems with a version of macOS up to 10.14. That's because macOS 10.14 Mojave includes a built-in out of the box dark mode. That was not known as of the writing of this post.&lt;/blockquote&gt;&lt;p&gt;OS X is known to be light, extremely light. That's why, an user named &lt;strong&gt;@guilhermerambo&lt;/strong&gt; created &lt;a href="https://medium.com/@guilhermerambo/how-to-enable-real-dark-mode-on-os-x-macos-14966f9f7d24" rel="nofollow"&gt;this tool&lt;/a&gt;, which makes any system control in any app &lt;strong&gt;dark&lt;/strong&gt; and is easy as 1-2-3! But this tool is &lt;strong&gt;not&lt;/strong&gt; the perfection. In fact it can only darken apps on a &lt;em&gt;app per app basis&lt;/em&gt;, and once you quit an app, you lose the "dark mode". The developer even said:&lt;/p&gt;&lt;blockquote&gt;The service I've written to enable dark mode in apps is just an experiment. You should not expect it to work or work reliably. I will not help anyone with this, it's just a proof of concept.&lt;/blockquote&gt;&lt;p&gt;If an app contains few or none of the system's built-in controls, the tool will be useless.&lt;/p&gt;&lt;p&gt;Two more disclaimers by the developer:&lt;/p&gt;&lt;blockquote&gt;Disclaimer 1: Please note that, while I have SIP disabled on my machine, I do not recommend it to anyone, it's an important security feature and you should only disable it if you know the implications.&lt;/blockquote&gt;&lt;blockquote&gt;Disclaimer 2: I am not responsible for any issues you might face while trying this out. If you computer blows up, it's not my fault.&lt;/blockquote&gt;&lt;p&gt;So, with this on mind, let's start!&lt;/p&gt;&lt;h2 id="requisites"&gt;Requisites&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;OS X El Capitan or later ver.&lt;/li&gt;&lt;li&gt;Xcode and Command Line Tools installed&lt;/li&gt;&lt;li&gt;&lt;a href="https://support.apple.com/en-us/HT204899" rel="nofollow"&gt;System Integrity Protection (SIP)&lt;/a&gt; disabled (&lt;a href="https://www.imore.com/el-capitan-system-integrity-protection-helps-keep-malware-away" rel="nofollow"&gt;how-to&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="instructions"&gt;Instructions&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;Download &lt;a href="https://github.com/insidegui/DarkMode/raw/master/Release/DarkMode.zip"&gt;this file&lt;/a&gt; and extract it to &lt;code&gt;~/Library/Services&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Open the app you want to darken and press &lt;code&gt;[NameoftheApp]&lt;/code&gt; &amp;gt; &lt;code&gt;Services&lt;/code&gt; &amp;gt; &lt;code&gt;Apply Dark Mode&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Wait ~10 secs and —&lt;strong&gt;voilà!&lt;/strong&gt;—your app should be dark.&lt;/li&gt;&lt;/ol&gt;</content:encoded></item><item><title>My recommendations for the perfect Nintendo 3DS</title><description>In this post, I'll show you my recommendations for the perfect unmodified Nintendo 3DS.</description><link>http://localhost:2368/my-recommendations-for-the-perfect-nintendo-3ds/</link><guid isPermaLink="false">5d5bdab206e75012f5f629f8</guid><category>Nintendo</category><category>Cia</category><category>FreeShop</category><category>Injections</category><dc:creator>Samplasion</dc:creator><pubDate>Wed, 08 Nov 2017 18:18:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/home-page-feature.jpg" medium="image"/><content:encoded>&lt;blockquote&gt;&lt;strong&gt;Hey!&lt;/strong&gt; This post is only a suggestion of my ideas. Feel free to comment yours, but don't criticize other people's ideas.&lt;/blockquote&gt;&lt;h2 id="the-base-console"&gt;The Base Console&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;New Nintendo 3DS, not too big, not too small.&lt;/li&gt;&lt;li&gt;Color: Whatever&lt;/li&gt;&lt;li&gt;Cover: Whatever&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="the-hardware"&gt;The Hardware&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;128GB SD Card, to have just enough space for your games.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="the-software"&gt;The Software&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;b9s&lt;/li&gt;&lt;li&gt;Luma3DS&lt;/li&gt;&lt;li&gt;OFW updated to the latest version&lt;/li&gt;&lt;li&gt;&lt;s&gt;NTR CFW ver. 3.2&lt;/s&gt; (outdated)&lt;/li&gt;&lt;li&gt;FBI&lt;/li&gt;&lt;li&gt;FTPD (ftp file manager)&lt;/li&gt;&lt;li&gt;Homebrew Launcher Loader&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="games"&gt;Games&lt;/h2&gt;&lt;h3 id="hacks"&gt;Hacks&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;CTGP-7 by PabloMK7&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="virtual-console"&gt;Virtual Console&lt;/h3&gt;&lt;img src="http://localhost:2368/content/images/2019/08/home-page-feature.jpg" alt="My recommendations for the perfect Nintendo 3DS"&gt;&lt;p&gt;Basically anything you want with &lt;a href="https://www.google.com/search?q=asdolo%27s+vc+injection+site:gbatemp.net&amp;amp;sa=X&amp;amp;ved=0ahUKEwjakqH416_XAhWLWhoKHW0kDmgQrQIIMygEMAA&amp;amp;biw=1680&amp;amp;bih=819" rel="nofollow"&gt;Asdolo's Line of Ultimate VC Injectors for 3DS&lt;/a&gt;&lt;/p&gt;&lt;h3 id="games-1"&gt;Games&lt;/h3&gt;&lt;p&gt;&lt;s&gt;Basically anything you want with &lt;a href="https://freeshop.pw/" rel="nofollow"&gt;freeShop&lt;/a&gt;&lt;/s&gt; Sadly, freeShop has been discontinued, so you'll have to get your games by dumping them. Like the old days before freeShop.&lt;/p&gt;</content:encoded></item><item><title>Update your encTitleKeys with an homebrew</title><description>In this post, we'll take a look to a way to update the title keys for freeShop.</description><link>http://localhost:2368/update-your-enctitlekeys-with-an-homebrew/</link><guid isPermaLink="false">5d5bda0606e75012f5f629e8</guid><category>Nintendo</category><category>Updates</category><category>Cia</category><category>FreeShop</category><dc:creator>Samplasion</dc:creator><pubDate>Sun, 05 Nov 2017 20:44:00 GMT</pubDate><content:encoded>&lt;p&gt;freeShop is a homebrew that makes easy to download games that you already own from Nintendo's servers, in an open-source way.&lt;/p&gt;&lt;p&gt;However, that said titles are stored in a file called &lt;strong&gt;encTitleKeys&lt;/strong&gt;. This file is illegal to share and contains all user purchased titles. And here comes to play an homebrew called &lt;strong&gt;freeShop launcher&lt;/strong&gt;. At start, that homebrew downloads the latest title keys from &lt;a href="http://3ds.titlekeys.gq/" rel="nofollow"&gt;here&lt;/a&gt; and then starts freeShop, allowing a download of all available &lt;em&gt;-and not-&lt;/em&gt; titles on the eShop, even titles of the “Nintendo Ambassadors Program”.&lt;/p&gt;&lt;p&gt;freeShop makes it easy to download DLCs, too, in a GUI available in many languages. You can download freeShop &lt;a href="https://freeshop.pw/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title>I injected SMB3Mix into my 3DS!</title><description>Yesterday I got SMB 3Mix in my Nintendo 3DS injected in a .cia</description><link>http://localhost:2368/i-injected-smb3mix-into-my-3ds/</link><guid isPermaLink="false">5d5bd94806e75012f5f629d1</guid><category>Nintendo</category><category>Updates</category><category>Injections</category><category>Cia</category><dc:creator>Samplasion</dc:creator><pubDate>Sun, 05 Nov 2017 09:21:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2019/08/68747470733a2f2f692e696d6775722e636f6d2f54316c4c324d322e706e67.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2019/08/68747470733a2f2f692e696d6775722e636f6d2f54316c4c324d322e706e67.png" alt="I injected SMB3Mix into my 3DS!"&gt;&lt;p&gt;Yesterday I got SMB 3Mix in my Nintendo 3DS, injected in a &lt;code&gt;.cia&lt;/code&gt; by a program called &lt;strong&gt;Ultimate NES VC Injector for 3DS&lt;/strong&gt;. What this program basically does is, in order, taking a &lt;code&gt;.nes&lt;/code&gt; rom, taking its data from a database or custom data &lt;em&gt;(title, short title, publisher and icon)&lt;/em&gt;, selecting a banner, a Title ID and a screen mode and, finally, injecting it all in a CFW-installable &lt;code&gt;.cia&lt;/code&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>